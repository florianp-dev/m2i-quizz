@model ModelEntities.Entities.Question

@{
    ViewBag.Title = "Edit";
    List<ModelEntities.Entities.Answer> answer = ViewBag.Answer;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Question</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.QuestionID)

    <div class="form-group">
        @Html.LabelFor(model => model.Wording, "Libellé: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Wording, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Wording, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, "Actif: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TechnoID, "Technologie:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TechnoID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TechnoID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QTypeID, "Type de question:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.LinkedQType.Wording)
            @Html.HiddenFor(model => model.QTypeID, "QTypeID")
            @Html.ValidationMessageFor(model => model.QTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DifficultyID, "Difficulté:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DifficultyID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DifficultyID, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    @*@{ int counter = 1;}
    @foreach (var answ in answer)
    {
        @Html.HiddenFor(model => model.AnswerID)
        <div class="form-group">
            @Html.LabelFor(model => answ.AnswerID, "Réponse " + counter + ":", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => answ.Content, "Content", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => answ.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => answ.AnswerID, "Est correcte:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => answ.IsCorrect, "IsCorrect")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => answ.AnswerID, "Commentaire:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => answ.LinkedComment.Content, "Content", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => answ.LinkedComment.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        counter = counter + 1;
    }*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
